<!--
     Copyright 2004 The Apache Software Foundation
     Licensed  under the  Apache License,  Version 2.0  (the "License");
     you may not use  this file  except in  compliance with the License.
     You may obtain a copy of the License at
     
     http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed  under the  License is distributed on an "AS IS" BASIS,
     WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
     implied.
     
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<document>
  <properties>
    <author email="dev@avalon.apache.org">Avalon Development Team</author>
    <title>Configuration Merger</title>
  </properties>
  <body>
    <section name="What is the Configuration Merger?" >
      <p>
        The Configuration Merger can take two Configurations, a <em>base</em> and a
        <em>layer</em>. It will then <strong>merge</strong> the layer onto the base
      </p>
    </section>

    <section name="Why not CascadingConfiguration" >
      <p>There was a
        <a href="http://marc.theaimsgroup.com/?t=101359616800001&amp;r=1&amp;w=2">long thread</a>
        on what the rules for cascading should be.
      </p>

      <p>
        The CascadingConfiguration did not attempt to handle the specific case
        mentioned in the link above, which is namely the following situation:

        <source>
Layer: &lt;a&gt;&lt;b x="http://avalon.apache.org/excalibur/&gt;&lt;/a&gt;
Base: &lt;a&gt;&lt;b/&gt;&lt;/a&gt;
Result: &lt;a&gt;&lt;b x="http://avalon.apache.org/excalibur/&gt;&lt;b/&gt;&lt;/a&gt;
        </source>

        when using Configuration.getChild(name), CascadingConfiguration would do the
        right thing, but it didn't even attempt to when using
        Configuration.getChildren. We need a sane result from getChildren because we
        serialize the merged configurations when validating them. In the above
        example, the result expected should probably be the same as the layer.
      </p>
    </section>

    <section name="Merging children in a deterministic manner" >
      <p>
        But how do we know that's what the user wants? We don't (at least I'm missing
        the ESP module for my computer). The answer? <strong>metadata</strong>
      </p>

      <p>
        The ConfigurationMerger will use a specially named attribute,
        <em>excalibur-configuration:merge</em>, to control the merging of layer
        children with base children. For the example above, you will get the result above. But with
        the magic attribute on the layer:

        <source>
&lt;a&gt;&lt;b x="1" excalibur-configuration:merge="true"/&gt;&lt;/a&gt;
        </source>

        the result will be:

        <source>
&lt;a&gt;&lt;b x="http://avalon.apache.org/excalibur/&gt;&lt;/a&gt;
        </source>
      </p>

      <p>
        The <em>excalibur-configuration:merge</em> attribute is removed during the merge,
        since it metadata only needed to merge. Why is it removed? In case you are merging
        two configurations and then need to serialize the result for validation, you don't
        want merge metadata breaking that
      </p>

      <p>
        A limitation is that there can only be a <strong>single</strong> child in both the
        layer and base with the same getName(). With complex configurations this could cause
        a problem.
      </p>

      <section name="What if there are multiple children with the same getName()" >
        <p>
          There is a solution. It is possible to define a <strong>key attibute</strong>
          using the magic attribute <em>excalibur-configuration:key-attribute</em>
        </p>

        <p>
          When using a key attribute, the two items to merge must not only have the same
          name, they must also have the same value for the key attribute.

          <source>
Layer:
&lt;a&gt;
  &lt;b x="1" excalibur-configuration:merge="true" excalibur-configuration:key-attribute="x"&gt;
    &lt;c&gt;
  &lt;/b&gt;
  &lt;b x="http://avalon.apache.org/excalibur/&gt;
&lt;/a&gt;

Base:
&lt;a&gt;
  &lt;b x="http://avalon.apache.org/excalibur/&gt;
  &lt;b x="http://avalon.apache.org/excalibur/&gt;
&lt;/a&gt;
          </source>

          Thus in order to merge &lt;b x="http://avalon.apache.org/excalibur/&gt;, the name must be the same
          <strong>and</strong> the <em>x</em> attribute must have the same value.
        </p>
      </section>
    </section>
  </body>
</document>
